# Generated by Django 3.2.12 on 2022-02-16 17:11

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('basic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=64)),
                ('start', models.DateTimeField(blank=True)),
                ('finis', models.DateTimeField(blank=True)),
                ('price', models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Toolbelt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=64, unique=True, verbose_name='Program Slug')),
                ('label', models.CharField(blank=True, max_length=256, verbose_name='Program Name')),
                ('helps', models.TextField(blank=True, verbose_name='Description')),
                ('state', models.BooleanField(default=False, verbose_name='Enabled ?')),
                ('website', models.CharField(blank=True, max_length=256, verbose_name='Program Website')),
                ('flavour', models.CharField(choices=[('sub', 'Subdomain Tool'), ('dns', 'Domain Analyser'), ('adr', 'Port Scanner'), ('svc', 'Network Scanner'), ('web', 'Web Site Scanner'), ('url', 'Web Link Crawler')], default='dns', max_length=64, verbose_name='Data Source')),
                ('command', models.CharField(max_length=1024, verbose_name='Shell command')),
                ('install', models.TextField(blank=True, verbose_name='Install Script')),
                ('updater', models.TextField(blank=True, verbose_name='Updater Script')),
            ],
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=64)),
                ('start', models.DateTimeField(blank=True)),
                ('finis', models.DateTimeField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='networks', to='osint.platform')),
            ],
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=64)),
                ('token', models.CharField(default=uuid.uuid4, help_text='Optional - Autogenerated if left blank', max_length=50)),
                ('mac_addr', models.CharField(blank=True, max_length=256)),
                ('ip4_addr', models.GenericIPAddressField(blank=True, default=None, null=True, verbose_name='IPv4 address')),
                ('ip6_addr', models.GenericIPAddressField(blank=True, default=None, null=True, unpack_ipv4=True, verbose_name='IPv6 address')),
                ('hostname', models.CharField(max_length=256)),
                ('provider', models.CharField(blank=True, choices=[('dummy', 'dummy'), ('rackspace', 'rackspace'), ('digitalocean', 'digitalocean')], max_length=25)),
                ('username', models.CharField(default='root', max_length=256)),
                ('password', models.CharField(blank=True, max_length=256)),
                ('last_time', models.DateTimeField(blank=True, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='machines', to='basic.organism')),
            ],
            options={
                'verbose_name': 'Machine',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=64)),
                ('start', models.DateTimeField(blank=True)),
                ('finis', models.DateTimeField(blank=True)),
                ('price', models.FloatField(default=0)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='domaines', to='basic.organism')),
            ],
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Configuration Name')),
                ('flag', models.BooleanField(default=False, verbose_name='Same Folder ?')),
                ('meta', models.TextField(verbose_name='Source Template')),
                ('data', jsonfield.fields.JSONField(blank=True, default=dict, verbose_name='Context Vars')),
                ('tool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config', to='osint.toolbelt')),
            ],
        ),
    ]
