# Generated by Django 3.2.12 on 2022-02-23 23:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_better_admin_arrayfield.models.fields
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Identity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('title', models.CharField(blank=True, choices=[('%(last_name)s %(first_name)s', '%(last_name)s %(first_name)s'), ('%(first_name)s, %(last_name)s', '%(first_name)s, %(last_name)s')], default='%(last_name)s %(first_name)s', max_length=128)),
                ('about', models.TextField(blank=True)),
                ('birth', models.DateField(blank=True, default=None, null=True, verbose_name='Date of Birth')),
                ('where', django_countries.fields.CountryField(max_length=2)),
                ('roles', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.CharField(max_length=64), blank=True, default=list, size=None, verbose_name='Job Roles')),
                ('logos', models.ImageField(blank=True, default=None, null=True, upload_to='identity/brand', verbose_name='Image Brand')),
                ('cover', models.ImageField(blank=True, default=None, null=True, upload_to='identity/cover', verbose_name='Image Cover')),
                ('phone', django_better_admin_arrayfield.models.fields.ArrayField(base_field=phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None), blank=True, default=list, size=None, verbose_name='Phone Numbers')),
                ('sites', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.URLField(), blank=True, default=list, size=None, verbose_name='Websites')),
                ('social_thumb', models.URLField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Identity',
                'verbose_name_plural': 'Identities',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, verbose_name='Currency Slug')),
                ('name', models.CharField(blank=True, max_length=128, verbose_name='Currency Name')),
                ('flag', models.CharField(blank=True, max_length=64, verbose_name='Country Code')),
            ],
            options={
                'verbose_name_plural': 'Currencies',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=32, verbose_name='Language Slug')),
                ('name', models.CharField(max_length=128, verbose_name='Langauge Name')),
                ('flag', models.CharField(blank=True, max_length=64, verbose_name='Country Code')),
            ],
        ),
        migrations.CreateModel(
            name='Organism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alias', models.CharField(max_length=64)),
                ('title', models.CharField(blank=True, max_length=256)),
                ('email', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.EmailField(max_length=254), blank=True, default=list, size=None, verbose_name='E-mails')),
                ('phone', django_better_admin_arrayfield.models.fields.ArrayField(base_field=phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None), blank=True, default=list, size=None, verbose_name='Phone Numbers')),
                ('sites', django_better_admin_arrayfield.models.fields.ArrayField(base_field=models.URLField(), blank=True, default=list, size=None, verbose_name='Websites')),
                ('birth', models.DateField(blank=True, default=None, null=True, verbose_name='Date of Birth')),
                ('logos', models.ImageField(blank=True, default=None, null=True, upload_to='organism/brand', verbose_name='Image Brand')),
                ('cover', models.ImageField(blank=True, default=None, null=True, upload_to='organism/cover', verbose_name='Image Cover')),
                ('admin', models.ManyToManyField(blank=True, related_name='admin', to=settings.AUTH_USER_MODEL)),
                ('crowd', models.ManyToManyField(blank=True, related_name='crowd', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to=settings.AUTH_USER_MODEL)),
                ('staff', models.ManyToManyField(blank=True, related_name='staff', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
            },
        ),
        migrations.AddField(
            model_name='identity',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='traders', to='basic.currency'),
        ),
        migrations.AddField(
            model_name='identity',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='identity',
            name='language',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audience', to='basic.language'),
        ),
        migrations.AddField(
            model_name='identity',
            name='speaking',
            field=models.ManyToManyField(blank=True, related_name='speakers', to='basic.Language'),
        ),
        migrations.AddField(
            model_name='identity',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
